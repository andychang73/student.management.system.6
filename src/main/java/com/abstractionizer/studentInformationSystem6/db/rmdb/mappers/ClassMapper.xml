<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.abstractionizer.studentInformationSystem6.db.rmdb.mappers.ClassMapper">
    <update id="updateNumOfStudentEnrolled">
        UPDATE class
        SET num_of_student_enrolled = num_of_student_enrolled + 1,
            version = version + 1
        WHERE id = #{id} AND version = #{version}
    </update>

    <select id="countByStaffIdAndStartTimeAndEndTime" resultType="java.lang.Integer">
        SELECT COUNT(id)
        FROM class
        WHERE staff_id = #{staff_id} AND week_day = #{week_day} AND ((start_time <![CDATA[ < ]]> #{end_time} AND #{end_time} <![CDATA[ <= ]]> end_time)
                OR (#{start_time} <![CDATA[ < ]]> end_time AND end_time <![CDATA[ <= ]]> #{end_time}))
    </select>

    <resultMap id="ClassesOfTheWeek" type="com.abstractionizer.studentInformationSystem6.models.vo.classes.ClassesOfTheWeekVo">
        <result column="course_id" property="courseId" jdbcType="INTEGER"/>
        <result column="course" property="course" jdbcType="VARCHAR"/>
        <collection property="classDto" ofType="com.abstractionizer.studentInformationSystem6.models.dto.classes.ClassDto">
            <id column="id" property="classId" jdbcType="INTEGER"/>
            <result column="week_day" property="weekDay" jdbcType="INTEGER"/>
            <result column="staff_id" property="teacherId" jdbcType="INTEGER"/>
            <result column="staff_name" property="teacherName" jdbcType="VARCHAR"/>
            <result column="start_time" property="startTime" jdbcType="TIME"/>
            <result column="end_time" property="endTime" jdbcType="TIME"/>
        </collection>
    </resultMap>

    <select id="selectClassDtoBySemesterIdAndCourseId" resultMap="ClassesOfTheWeek">
        SELECT c.id AS course_id, c.course, cl.id, cl.week_day, s.id AS staff_id, s.username AS staff_name, cl.start_time, cl.end_time
        FROM course c
        JOIN class cl ON cl.course_id = c.id
        JOIN staff s ON s.id = cl.staff_id
        WHERE cl.semester_id = #{semester_id} AND cl.course_id = #{course_id} AND cl.status = 1 AND c.status = 1
    </select>

    <resultMap id="ClassInfoVo" type="com.abstractionizer.studentInformationSystem6.models.vo.classes.ClassInfoVo">
        <result column="staff_name" property="teacherName" jdbcType="VARCHAR"/>
        <collection property="students" ofType="com.abstractionizer.studentInformationSystem6.models.vo.user.student.StudentAttendanceAndGrade">
            <result column="student_name" property="studentName" jdbcType="VARCHAR"/>
            <result column="homework_average_grade" property="homeworkAverageGrade" jdbcType="FLOAT"/>
            <result column="attendance" property="attendance" jdbcType="FLOAT"/>
        </collection>
    </resultMap>

    <select id="selectByClassId" resultMap="ClassInfoVo">
        SELECT sf.username AS staff_name, st.username AS student_name, homework_average_grade, attendance
        FROM class c
        JOIN student_class sc ON sc.class_id = c.id
        JOIN staff sf ON sf.id = c.staff_id
        JOIN student st ON st.id = sc.student_id
        WHERE c.id = #{id}
    </select>
    <select id="countByClassIdAndOrHeadId" resultType="java.lang.Integer">
        SELECT COUNT(cl.id)
        FROM class cl
        JOIN course co ON co.id = cl.course_id
        <where>
            <if test="id != null and id != 0">
                AND cl.id = #{id}
            </if>
            <if test="head_id != null and head_id != 0">
                AND head_id = #{head_id}
            </if>
        </where>
    </select>

    <resultMap id="ClassVo" type="com.abstractionizer.studentInformationSystem6.models.vo.classes.ClassVo">
        <id column="class_id" property="classId" jdbcType="INTEGER"/>
        <result column="course" property="course" jdbcType="VARCHAR"/>
        <result column="week_day" property="weekDay" jdbcType="INTEGER"/>
        <result column="start_time" property="startTime" jdbcType="TIME"/>
        <result column="end_time" property="endTime" jdbcType="TIME"/>
    </resultMap>

    <select id="selectByStaffIdAndSemesterId" resultMap="ClassVo">
        SELECT cl.id AS class_id, c.course, week_day, start_time, end_time
        FROM class cl
        JOIN course c ON c.id = cl.course_id
        WHERE staff_id = #{staff_id} AND semester_id = #{semester_id}
    </select>
    <select id="countByClassIdAndStaffIdAndDate" resultType="java.lang.Integer">
        SELECT COUNT(c.id)
        FROM class c
        JOIN semester s ON s.id = c.semester_id
        WHERE c.staff_id = #{staff_id} AND c.id = #{id} AND (#{date} BETWEEN s.start_date AND s.end_date)
    </select>
    <select id="selectStudentAverageGradeByClassId"
            resultType="com.abstractionizer.studentInformationSystem6.models.vo.studentHomework.StudentAverageGradesVo">
        SELECT s.id AS student_id, s.username AS student_name, ROUND(SUM(grade)/#{number_of_homework}, 2) as average_grade
        FROM class c
        JOIN semester_class sc ON sc.class_id = c.id
        JOIN homework h ON h.semester_class_id = sc.id
        JOIN student_homework sh ON sh.homework_id = h.id
        JOIN student s ON s.id = sh.student_id
        WHERE c.id = #{id}
        GROUP BY s.id
    </select>
    <select id="countNumberOfHomeworkByClassId" resultType="java.lang.Integer">
        SELECT COUNT(h.id)
        FROM class c
        JOIN semester_class sc ON sc.class_id =c.id
        JOIN homework h ON h.semester_class_id = sc.id
        WHERE c.id = #{id}
    </select>
    <select id="selectByClassIdAndStudentId"
            resultType="com.abstractionizer.studentInformationSystem6.db.rmdb.entities.StudentCourse">
        SELECT sc.*
        FROM class cl
        JOIN course c ON c.id = cl.course_id
        JOIN student_course sc ON sc.course_id = c.id
        WHERE cl.id = #{id} AND sc.status = 2 AND sc.semester_id = #{semester_id} AND final_grade IS NULL AND sc.student_id IN
        <foreach collection="student_ids" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>
    <select id="countByClassIdAndSemesterId" resultType="java.lang.Integer">
        SELECT COUNT(id)
        FROM class
        WHERE id = #{id} AND semester_id = #{semester_id}
    </select>
    <select id="selectHomeWorkGradesByClassIdAndStudentId"
            resultType="com.abstractionizer.studentInformationSystem6.models.dto.studentHomework.WeekNoAndGrade">
        SELECT x.week_no, y.grade
        FROM
            (
             SELECT h.id, sc.week_no
             FROM class c
             JOIN semester_class sc ON sc.class_id = c.id
             JOIN homework h ON h.semester_class_id = sc.id
             WHERE c.id = #{id}
            ) AS x
        LEFT JOIN
            (
             SELECT homework_id, grade
             FROM student_homework
             WHERE student_id = #{student_id}
            ) AS y ON x.id = y.homework_id
    </select>
    <select id="selectByCourseIdAndSemesterId"
            resultType="com.abstractionizer.studentInformationSystem6.models.vo.classes.ClassWithoutCourseVo">
        SELECT id, week_day, start_time, end_time, maximum, num_of_student_enrolled
        FROM class
        WHERE course_id = #{course_id} AND semester_id = #{semester_id} AND status = 1 AND num_of_student_enrolled &lt; maximum
    </select>
    <select id="getById" resultType="com.abstractionizer.studentInformationSystem6.db.rmdb.entities.Classes">
        SELECT *
        FROM class
        WHERE id = #{id} AND num_of_student_enrolled &lt; maximum
    </select>
    <select id="countByCourseIdAndStudentId" resultType="java.lang.Integer">
        SELECT COUNT(sc.id)
        FROM
            (
             SELECT id
             FROM class
             WHERE course_id = (SELECT course_id FROM class WHERE id = #{id})
            ) AS x
        JOIN student_class sc ON x.id = sc.class_id
        WHERE sc.student_id = #{student_id} AND sc.status = 1
    </select>

</mapper>